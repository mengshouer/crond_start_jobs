#!/system/bin/sh

scripts_dir="${0%/*}"
. "${scripts_dir}/utils.sh"

start_jobs_path="/data/adb/start_jobs"
backup_dir="$start_jobs_path/backup"

module_name="crond_start_jobs"
module_path=$(find /data/adb -type d -name "$module_name" | head -n 1)
PROPFILE="${module_path}/module.prop"

# 进程查找函数
get_cron_pid() {
  local pid_file="$backup_dir/cron_pid"
  [[ -f "$pid_file" ]] && cat "$pid_file" || pgrep -f "crond -c ${cron_d_path}"
}

# 模块描述更新函数
update_module_description() {
  local status="$1"
  sed -Ei "s/^description=(\[.*][[:space:]]*)?/description=[ $status ] /g" "$PROPFILE"
}

start_cron() {
  # 优化nice命令检查
  local nice_cmd=""
  if command -v nice &> /dev/null; then
    nice_cmd="nice -n -10"
  fi
  
  # 启动crond
  $nice_cmd busybox crond -c $backup_dir
  sleep 2

  # 获取进程ID
  local cron_pid=$(get_cron_pid)
  
  logd_clear

  if [[ -n $cron_pid ]]; then
    local crond_root_file=$backup_dir/root
    echo $cron_pid > $backup_dir/cron_pid
    update_module_description "😍 service (pid:$cron_pid) is running !!!"
    basic_Information
    logd "开始运行: [$crond_root_file]"
    logd "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
  else
    update_module_description "😱 Module is working! but no service is running !!!"
    basic_Information
    logd "未检测到 cron 任务，需要修改配置文件后，手动运行一遍 ${start_jobs_path}/Run_cron.sh"
    exit 1
  fi
}

stop_cron() {
  # 获取所有需要停止的进程ID
  local pids=$(get_cron_pid)
  
  # 批量停止进程
  if [[ -n "$pids" ]]; then
    for pid in $pids; do
      kill -15 "$pid" 2>/dev/null
    done
  fi
  
  # 清理文件
  rm -f $backup_dir/cron_pid
  update_module_description "❌ service is not running !!!"
}

case "$1" in
  start)
    stop_cron >> /dev/null 2>&1
    start_cron
    ;;
  stop)
    stop_cron
    ;;
esac
